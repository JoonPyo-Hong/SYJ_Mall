<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mybatis를 통해 db연동 -->
<mapper namespace="SYJDB">

	<!-- 로그인 검증과정 -->
	<select id="loginVerification" resultType="com.test.SYJ_Mall.login.LoginDTO" parameterType="java.util.HashMap" statementType="CALLABLE" >
		declare @user_seq int
		declare @login_code int
		exec dbo.qoo10_total_login #{userIp}, #{id}, #{encpw}, @login_code output, @user_seq output
		select @login_code as loginCode, @user_seq as userSeq 
	</select>
	
	<!-- 프론트단 로그인처리 -->
	<select id="firstLoginCheck" resultType="Integer" parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_first_user_login #{userId},#{userPw},#{userIp}, @result output 
		select @result
		
	</select>
	
	
	<!-- 광고처리 -->
	<select id="advertiseShow" resultType="com.common.utill.AdverDTO" statementType="CALLABLE" >
		{
			call dbo.advertise_show
		}
	</select>
	
	<!-- 유저정보 가져와주기 -->
	<select id="userInfoDetail" resultType="com.test.SYJ_Mall.login.UserDTO" statementType="CALLABLE" >
		{
			call dbo.qoo10_user_info (#{userSeq})
		}
	</select>
	
	<!-- 자동로그인 거친 후 회원의 로그인 시간,아이피 기록 -->
	<update id="autoAfterTrace" parameterType="java.util.HashMap" statementType="CALLABLE">
		{
			call dbo.qoo10_login_after_auto_check(#{ipaddress},#{userSeq})
		}
	</update>
	
	<!-- 회원가입 -->
	<select id="qooSignUpsp" resultType="Integer" parameterType="com.test.SYJ_Mall.login.SignUpDTO" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.qoo_sign_up #{qoouser_id},#{qoouser_pw},#{qoouser_birthday},#{qoouser_email},#{qoouser_gender},
							 #{qoouser_nation}, #{qoouser_ipaddress}, #{qoouser_phone_num}, #{qoouser_receive_email},
							 #{qoouser_receive_sms}, #{qoouser_name}, @result output
		select @result
		
	</select>
	
	<!-- 회원 이메일 체크 -->
	<select id="userSignUpIdCheck" resultType="Integer" parameterType="String" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.qoo_sign_up_id_check #{inputId},@result output
		select @result
		
	</select>
	
	
	<select id="userEmailIdCheck" resultType="Integer" parameterType="String" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_sign_up_email_check #{fullEmail},@result output
		select @result
		
	</select>
	
	<!-- 회원 핸드폰번호 체크 -->
	<select id="userPhoneNumCheck" resultType="Integer" parameterType="String" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_sign_up_phone_num_check #{userPhoneNum},@result output
		select @result
		
	</select>
	
	
	
	<!--에러요인 집어넣어주기  -->
	<insert id="errorMsgInput" parameterType="java.util.HashMap" statementType="CALLABLE">
		
		{
			call dbo.kakao_error_log(#{ip},#{errormsg})
		}
		
	</insert>
	
	<!-- 고객의 아이디 찾기-->
	<select id="findUserId" resultType="String" parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @userid varchar(100)
		exec dbo.kakao_find_user_id #{email},#{phone},@userid output
		select @userid
		
	</select>	
	
	<!-- 고객 비밀번호 찾기전 해당 아이디가 존재하는지 검증 -->
	<select id="findUserPwExist" resultType="Integer" parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_find_user_pw_exists #{userId},#{userEmail},#{userPhone},@result output
		select @result
		
	</select>
	
	<!-- 고객의 비밀번호를 임시비밀번호로 변경해준다. -->
	<select id="modifyUserPw" resultType="Integer" parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_user_modify_pw #{userId},#{userEmail},#{userPhone},#{encInstPw},@result output 
		select @result
		
	</select>	
	
	
	<!-- 고객의 임시비밀번호를 고객이 지정한 비밀번호로 변경해준다.-->
	<select id="modifyUserPwReturnNew" resultType="Integer" parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_user_pw_redefined_return #{userSeq},#{userPw},@result output 
		select @result
		
	</select>	
	
	
	<!-- 회원의 장바구니에 존재하는 물품리스트를 가져와준다. -->
	<select id="getCookieProductId" resultType="com.test.SYJ_Mall.popularItem.UserProductDTO"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		{
			call dbo.kakao_cookie_product_user_nohave (#{userSeq})
		}
				
	</select>
	
	<!-- 쿠키에존재하는 상품 회원의 디비로 모두 넣어주기 회원이 한번도 지웠던적 없는 목록-->
	<select id="setCookieToDbBasketListNondeleted" resultType="Integer"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_cookie_product_to_db_notdelete #{userSeq},#{productId},@result output
		select @result
				
	</select>
	
	<!-- 쿠키에존재하는 상품 회원의 디비로 모두 넣어주기 회원이 지운적이 있는 목록-->
	<select id="setCookieToDbBasketListDeleted" resultType="Integer"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec dbo.kakao_cookie_product_to_db_delete #{userSeq},#{productId},@result output
		select @result
				
	</select>
	
	
	<!-- 로그인 유지를 위해 DB에 고객 RSA 정보를 update 해준다.-->
	<select id="intoDBUserRsa" resultType="Integer"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec @result = dbo.kakao_user_login_stay_insert #{userSeq},#{saveRsaPrivateKey}
		select @result
				
	</select>
	
	
	<!-- 로그인 유지를 위해 DB에서 고객 RSA 정보를 가져와 준다.-->
	<select id="getDBUserRsa" resultType="String"  parameterType="Integer" statementType="CALLABLE" >
		
		{
			call dbo.kakao_get_user_login_stay(#{loginSaveUserSeq})
		}
				
	</select>
	
	
	<!-- QR 관련 url 정보 저장 디비까지 갈 필요 없을듯?-->
	<select id="setQrUrl" resultType="Integer"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec @result = dbo.kakao_set_qr_uuid #{uuid}, #{requestIpAddress}
		select @result
				
	</select>
	
	<!-- QR 관련 모바일 기기 접속 허용하기전 체킹-->
	<select id="qrMobilePrevChecking" resultType="Integer"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec @result = dbo.kakao_set_qr_uuid_prev_checking #{qruuid},#{decodeQrSeqCode}
		select @result
				
	</select>
	
	<!-- QR 관련 모바일 기기 유저가 넘긴 정보가 문제 없을 경우 유저객체 넘겨준다.-->
	<select id="qrMobileUserInfo" resultType="com.test.SYJ_Mall.login.LoginQrIdIpDTO"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		{
			call dbo.kakao_get_qr_user_info (#{qruuid},#{decodeQrSeqCode})
		}
				
	</select>
	
	
	<!-- QR 관련 모바일 기기 접속 허용해주는 sp-->
	<select id="qrMobileIngoChecking" resultType="Integer"  parameterType="java.util.HashMap" statementType="CALLABLE" >
		
		declare @result int
		exec @result = dbo.kakao_set_qr_uuid_checkint #{qruuid},#{decodeQrSeqCode}
		select @result
				
	</select>
	
	<!-- QR 관련 유저 번호 가져오기-->
	<select id="qrMobileUserSeq" resultType="Integer"  parameterType="String" statementType="CALLABLE" >
		
		declare @result int
		exec @result = dbo.kakao_qr_grant_user_seq #{uuid}
		select @result
				
	</select>
	
	<!-- 타임아웃되거나 리프레시당한 uuid 지워주기-->
	<select id="qrUuidDelete" resultType="Integer"  parameterType="String" statementType="CALLABLE" >
		
		declare @result int
		exec @result = dbo.kakao_remove_qr_info #{uuid}
		select @result
				
	</select>
	
	<!-- 고객인지 아닌지 판단해주기 -->
	<select id="qrUserYn" resultType="Integer"  parameterType="Integer" statementType="CALLABLE" >
		
		declare @result int
		exec @result = dbo.kakao_set_qr_user_yn #{decodeQrSeqCode}
		select @result
				
	</select>
	
	

</mapper>